#Exerc√≠cio 1 Utilizando o INNER JOIN, encontre as vendas nacionais (domestic_sales) e internacionais (international_sales) de cada filme.
SELECT Movies.title, BoxOffice.domestic_sales, BoxOffice.international_sales
FROM Movies INNER JOIN BoxOffice ON BoxOffice.movie_id = Movies.id;

#üöÄ Exerc√≠cio 2 Utilizando o INNER JOIN, fa√ßa uma busca que retorne o n√∫mero de vendas para cada filme que possui um n√∫mero maior de vendas internacionais (international_sales) do que vendas nacionais (domestic_sales).
SELECT m.title,( b.domestic_sales + b.international_sales) vendas
FROM Movies m INNER JOIN BoxOffice b ON b.movie_id = m.id WHERE  b.international_sales >  b.domestic_sales;

#üöÄ Exerc√≠cio 3: Utilizando o INNER JOIN, fa√ßa uma busca que retorne os filmes e sua avalia√ß√£o (rating) em ordem decrescente.
SELECT m.title, b.rating FROM Movies AS m INNER JOIN BoxOffice AS b ON b.movie_id = m.id ORDER BY b.rating DESC;

#Exerc√≠cio 4 Utilizando o LEFT JOIN, fa√ßa uma busca que retorne todos os dados dos cinemas, mesmo os que n√£o possuem filmes em cartaz e, adicionalmente, os dados dos filmes que est√£o em cartaz nestes cinemas. Retorne os nomes dos cinemas em ordem alfab√©tica.
SELECT  t.name, t.location, m.title, m.director, m.length_minutes, m.year
 FROM Theater AS t LEFT JOIN Movies AS m ON m.theater_id = t.id ORDER BY t.name ;

#Exerc√≠cio 5 Utilizando o RIGHT JOIN, fa√ßa uma busca que retorne todos os dados dos filmes, mesmo os que n√£o est√£o em cartaz e, adicionalmente, os dados dos cinemas que possuem estes filmes em cartaz. Retorne os nomes dos cinemas em ordem alfab√©tica.
SELECT  m.title, m.director, m.length_minutes, m.year,  t.name, t.location
 FROM Theater AS t RIGHT JOIN Movies AS m ON m.theater_id = t.id ORDER BY t.name ;

#üöÄ Exerc√≠cio 6 Utilizando o INNER JOIN, selecione todas as informa√ß√µes dos filmes que est√£o em cartaz (possuem theater_id diferente de NULL) com avalia√ß√£o maior que 8.
SELECT  m.title, m.director, m.length_minutes, m.year
 FROM Movies AS m INNER JOIN BoxOffice AS b ON m.id = b.movie_id  WHERE m.theater_id IS NOT NULL  AND b.rating > 8 ;


#1 Busque por todas pessoas e todos os pets que estejam associados
SELECT person.name , pet.name FROM person INNER JOIN pet ON person.id = pet.person_id;

#2. Busque todos os nomes das pessoas que possuem pedidos realizados e as pessoas funcion√°rias que fizeram a opera√ß√£o
SELECT person.name , pet.name FROM person INNER JOIN pet ON person.id = pet.person_id;

#Monte uma query que exiba o id do ator, nome do ator e id do filme em que ele j√° atuou, usando as tabelas actor e film_actor.
SELECT actor.actor_id, actor.first_name,film_actor.film_id FROM actor
INNER JOIN film_actor ON actor.actor_id = film_actor.actor_id;

#Use o JOIN para exibir o nome, sobrenome e endere√ßo de cada um dos funcion√°rios do banco. Use as tabelas staff e address. 
SELECT s.first_name, s.last_name, a.address FROM staff AS s 
INNER JOIN address AS a ON s.address_id = a.address_id;

#Exiba o id do cliente, nome e email dos primeiros 100 clientes, ordenados pelo nome em ordem decrescente, juntamente com o id do endere√ßo e o nome da rua onde o cliente mora. Essas informa√ß√µes podem ser encontradas nas tabelas customer e address. 
SELECT c.customer_id, c.first_name, c.email, a.address_id, a.address FROM customer c 
INNER JOIN address a ON  c.address_id = a.address_id ORDER BY c.first_name DESC LIMIT 100;
;





















